<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link
    href="https://fonts.googleapis.com/css2?family=Orbitron&family=Josefin+Sans&family=Poppins:wght@300&display=swap"
    rel="stylesheet">

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">

  <title>Room</title>
</head>
<style>
  @import url('https://fonts.googleapis.com/css?family=Open+Sans&display=swap');

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  p,
  li,
  input,
  button {
    font-family: 'Open Sans', sans-serif;
  }

  body {
    background: #f1f5f3;
    font-family: 'Poppins', sans-serif;
  }

  .chatroom {
    max-width: 400px;
    width: 100%;
    margin: 60px auto 0;
    background: #fff;
    border-radius: 5px;
    position: relative;
    display: flex;
    flex-direction: column;
    transition: all .3s;
  }

  .chatroom.active {
    filter: blur(20px);
  }

  .chatroom_section {
    padding: 10px 20px;
  }

  .chatroom_header {
    border-bottom: 1px solid grey;
  }

  .chatroom_header_name {
    position: relative;
    font-family: 'Poppins', sans-serif;
  }

  .chatroom_header_name::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    transform: translatey(-50%);
    font-weight: 900;
  }

  .chatroom_history {
    flex: 2;
  }

  .chatroom_history_list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    height: 400px;
    overflow-y: scroll;
  }

  .chatroom_history_list_item {
    margin-top: auto;
    margin-bottom: 20px;
    max-width: 75%;
    width: 100%;
    border-radius: 15px;
    padding: 10px 20px;
    color: #fff;
  }

  .chatroom_history_list_right {
    align-self: flex-end;
  }

  .chatroom_history_list_right:last-child {
    background: grey;
  }

  .chatroom_history_list_item--grey {
    background: grey;
  }

  .chatroom_history_list_item--blue {
    background: navajowhite;
  }

  .chatroom_history_entering {
    padding-top: 20px;
  }

  .chatroom_history_entering_spinner {
    display: inline-block;
    width: 10px;
    height: 10px;
    background: grey;
    border-radius: 50%;
    position: relative;
    margin-left: 15px;
    animation: 1.5s enteringMessage linear infinite;
    animation-delay: .5s;
  }

  .chatroom_history_entering_spinner::before,
  .chatroom_history_entering_spinner::after {
    content: "";
    width: 10px;
    height: 10px;
    background: grey;
    border-radius: 50%;
    position: absolute;
    top: 0;
  }

  .chatroom_history_entering_spinner::before {
    left: -15px;
    animation: 1.5s enteringMessage linear infinite;
  }

  .chatroom_history_entering_spinner::after {
    left: 15px;
    animation: 1.5s enteringMessage linear infinite;
    animation-delay: .75s;
  }

  .chatroom_history_entering_label {
    display: inline-block;
    margin-left: 15px;
    font-family: 'Open Sans', sans-serif;
    font-size: 12px;
  }

  .chatroom_form {
    border-top: 1px solid grey;
  }

  .chatroom_form form {
    display: flex;
    justify-content: space-between;
  }

  .chatroom_form_inputbox {
    flex-basis: 70%;
    max-width: 70%;
  }

  .chatroom_form_sendBtn {
    flex-basis: 20%;
    max-width: 20%;
  }

  /* Button Styling */
  .stylebutton {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .stylebutton>button {
    margin: 2%;
  }

  a {
    text-decoration: none;
  }

  button {
    display: flex;
    align-items: center;
    font-family: inherit;
    font-weight: 500;
    font-size: 17px;
    padding: 0.8em 1.3em 0.8em 0.9em;
    color: white;
    background: #4e0b54;
    border: none;
    letter-spacing: 0.05em;
    border-radius: 16px;
    cursor: pointer;
    transition: all .3s;
  }

  button svg {
    margin-right: 3px;
    transform: rotate(30deg);
    transition: transform 0.5s cubic-bezier(0.76, 0, 0.24, 1);
  }

  button span {
    transition: transform 0.5s cubic-bezier(0.76, 0, 0.24, 1);
  }

  button:hover {
    background: #1f141b;
  }

  button:hover svg {
    transform: translateX(5px) rotate(90deg);
  }

  button:hover span {
    transform: translateX(7px);
  }

  .coins {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;

    margin: 3%;
  }

  .coinBox {
    background: #4e0b54;
    color: #fff;
    padding: 5px 40px;
    border-radius: 5px;

    font-size: .8rem;
  }

  .coinBox>div {
    display: flex;
    justify-content: center;
  }

  .cointext h3 {
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .coinscount p {
    font-size: 1.4rem;
    font-family: 'Orbitron', sans-serif;
  }

  /* Matches List */
  .matchList {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;

    position: relative;
    top: 0;
    left: 0;
  }

  .matches {
    position: relative;
    top: 0;
    left: 0;
    background: #4e0b54;
    color: #fff;
    border-radius: 50px;
  }

  .matches a {
    position: absolute;
    top: 50%;
    left: 80%;
    transform: translate(-50%, -50%);
    background: #f1f5f3;
    color: #1c1d1e;
    padding: .4em .6em;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-size: .8rem;
    font-family: 'Josefin Sans', sans-serif;
    border-radius: 10px;
    transition: all .4s;
  }

  .matches a:hover {
    background: rgb(218, 218, 218);
  }


  @keyframes enteringMessage {
    0% {
      transform: scale(1);
      background: rgba(139, 139, 139, .5);
    }

    100% {
      transform: scale(.8);
      background: rgba(139, 139, 139, 0);
    }
  }

  /* For participant display */
  .show {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 50px;
    width: 150px;
    background: #ffffff;
    cursor: pointer;
    color: #000000;
    font-family: 'Josefin Sans', sans-serif;
    font-weight: bold;
    border-radius: 30px;
  }

  .members {
    position: absolute;
    top: 15%;
    left: 80%;
  }

  .members ul {
    list-style: none;
    opacity: 0;
    pointer-events: none;
  }

  .members ul li {
    margin-top: 6%;
    padding: 10px 30px;
    background: #ffffff;
    color: #000000;
    text-align: center;
    font-family: 'Josefin Sans', sans-serif;
    font-weight: bold;
  }

  .members ul li i {
    position: absolute;
    left: 89%;
    color: rgb(66, 248, 66);
  }

  .show:hover~ul {
    transition: all .7s;
    opacity: 1;
  }

  .requestsButton,.leaveButton {
    position: absolute;
    top: 50%;
    left: 80%;
    transform: translate(-50%,-50%);
  }

  .resultButton{
    position: absolute;
    top: 80%;
    left: 80%;
  }

  .leaveButton{
    top: 90%;
    left: 50%;
  }

  .coincontainer {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  .form {
    position: absolute;
    top: -50%;
    left: 43%;
    transform: translate(-50%, -50%);
    z-index: 20;
    margin: 7%;
    background: #ffffff;
    padding: 1em 2em 1em 2em;
    border-radius: 4px;
    transition: all .3s;
  }

  .form.active {
    top: 20%;
  }

  .name,
  .password,
  .plan,
  .btn {
    display: flex;
    justify-content: center;
    margin: 10%;
  }

  input[type="text"] {
    padding: 1em 1.5em 1em 1.5em;
    border: none;
    background: rgb(238, 235, 235);
    border-radius: 5px;
    outline: none;
    font-family: 'Josefin Sans', sans-serif;
  }

  button {
    padding: .7em 1em .7em 1em;
    outline: none;
    border: none;
    cursor: pointer;
    background: rgb(25, 48, 70);
    color: #ffffff;
    font-weight: 500;
    font-family: 'Poppins', sans-serif;
    border-radius: 5px;
    font-size: .8rem;
    text-transform: uppercase;
    font-weight: bold;
    letter-spacing: 1px;
    text-shadow: 1px 1px 2px #000000;
  }

  button:hover {
    transition: all .3s;
    background: rgb(77, 77, 77)
  }

  .form h2 {
    font-family: 'Montserrat', sans-serif;
    font-family: 'Quicksand', sans-serif;
    font-size: 1.4rem;
    margin: 2%;
    border-bottom: .5px dashed #1c1d1e;
    line-height: 50px;
  }

  /* .roomPage {
    background: rgb(55, 154, 247);
    background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.8)), url("https://img.search.brave.com/bOrTB2nAfhf_p4N03qGGhLYGn7Q4MnjP9EtQN-t1RS0/rs:fit:788:800:1/g:ce/aHR0cHM6Ly9kMTNp/cjUzc21xcWV5cC5j/bG91ZGZyb250Lm5l/dC9kMTEtc3RhdGlj/LXBhZ2VzL2xhbmRp/bmdfcGFnZS9ob21l/X2Rlc2t0b3BfZGhv/bmkucG5n");
    background-size: cover;
    min-height: 100vh;
  } */
</style>

<body>

  <div class="roomPage">
    <div class="coincontainer">
      <div class="form">
        <h2>Purchase Coins</h2>
        <div class="name">
          <input type="text" id="coins" name="title" placeholder="Coins" autocomplete="off">
        </div>

        <div class="btn">
          <button class="purchasebtn">Purchase</button>
        </div>
      </div>

      <div class="members">
        <div class="show">Participants</div>
        <ul id="list">

          <%for(let i=0; i < participants.length; i++){%>
            <li>
              <%=participants[i].name%> <i class="fa fa-circle" aria-hidden="true"></i>
            </li>
            <%}%>
              <!-- List will be dependent on javascript ! -->
              <!-- <li>Aditya <i class="fa fa-circle" aria-hidden="true"></i></li>
        <li>Joe <i class="fa fa-circle" aria-hidden="true"></i></li>
        <li>John <i class="fa fa-circle" aria-hidden="true"></i></li>
        <li>Doe <i class="fa fa-circle" aria-hidden="true"></i></li> -->
        </ul>
      </div>


      <%if(status==="admin"){%>
        <div class="requestsButton">
          <div class="request">
            <a href="/requests?id=<%=id%>"><button>Requests <%=lendRequests_length%></button></a>
          </div>
        </div>
        <%}%>

          <div class="resultButton">
            <div class="result">
              <a href="/result?id=<%=id%>"><button>Results</button></a>
            </div>
          </div>

          <%if(status==="participant"){%>
          <div class="leaveButton">
            <div class="leave">
              <a href="/leaveClub?id=<%=id%>"><button style="background: #e91e32;">Leave</button></a>
            </div>
          </div>
          <%}%>


          <div class="chatroom">
            <div class="chatroom_section chatroom_header">
              <div class="chatroom_section chatroom_header_name">Kitty</div>
            </div>
            <div class="chatroom_section chatroom_history">
              <ul class="chatroom_history_list matchList">
                <%if(status==="participant" ){%>
                  <%for(let i=0; i < matches.length; i++){%>
                    <li
                      class="chatroom_history_list_item chatroom_history_list_left chatroom_history_list_item--grey matches">
                      <%=matches[i].homeTeam%> X <%=matches[i].awayTeam%> <a
                            href="/play?id=<%=id%>&matchID=<%=matches[i].matchId%>" style="cursor:pointer">Play</a>
                    </li>
                    <%}%>
                      <%}%>
              </ul>
              <!-- <div class="chatroom_history_entering">
            <div class="chatroom_history_entering_spinner"></div>
            <span class="chatroom_history_entering_label">Typing</span>
          </div> -->
            </div>
            <div class="chatroom_section chatroom_form stylebutton">
              <!-- <input type="text" class="chatroom_form_inputbox" placeholder="Enter Message">-->
              <!-- <button type="submit" class="chatroom_form_buyBtn"></button> -->
              <a class="buyButton"></a>
              <button type="submit" class="chatroom_form_exitBtn"><i class="fa fa-sign-out" aria-hidden="true"></i>
                Exit</button>
            </div>
          </div>

          <div class="coins">
            <div class="coinBox">
              <div class="cointext">
                <h3>Available Coins</h3>
              </div>
              <div class="coinscount">
                <p>0</p>
              </div>
            </div>
          </div>

</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.3/socket.io.js"
  integrity="sha512-Jr0UIR/Q8MUX+93zjDOhuDUKLqJZObtwpkLJQcR9qMaLgL0thet39IORuavUaZFkZ8a4ktrUsKPM9mf5LWMduA=="
  crossorigin="anonymous"></script>
<script>
  //Data through server !
  let name = `<%=name%>`;
  let email = `<%=email%>`;
  let coins = `<%=coins%>`;
  let status = `<%=status%>`;

  console.log(name);
  console.log(email);
  console.log(coins);
  console.log(status);

  // Get url parameters
  const url_string = window.location.href;
  const url = new URL(url_string);

  const id = url.searchParams.get("id");
  const group_name = url.searchParams.get("title");

  console.log("Group ID :", id);
  console.log("Group Name :", group_name);

  const purchaseButton = document.querySelector(".purchasebtn");
  const purchaseForm = document.querySelector(".form");
  const coinsNumber = document.querySelector("#coins");
  const chatcontainer = document.querySelector(".chatroom");
  const header = document.querySelector(".chatroom_header_name");
  const exitButton = document.querySelector(".chatroom_form_exitBtn");
  const buyButton = document.querySelector(".buyButton");
  const matches = document.querySelector(".chatroom_history_list");
  const coinCount = document.querySelector(".coinscount");
  header.innerHTML = `<i class="fa fa-home" aria-hidden="true"></i> ${group_name}`;
  coinCount.innerHTML = `<p>${coins}</p>`;



  // // Take controls of input box and button
  // const name = prompt("What's your name ?");

  //Initialise connection using socket.io
  const socket = io();

  // Matches list !
  socket.on("matches", (data) => {
    // console.log(data);

    if (status === "admin") {
      let html = "";
      data.list.forEach((element) => {
        html += `<li class="chatroom_history_list_item chatroom_history_list_left chatroom_history_list_item--grey matches">${element.homeTeam} X ${element.awayTeam} <a href="/create?team1=${element.homeTeam}&team2=${element.awayTeam}&id=${id}&name=${group_name}&date=${element.date}" style="cursor:pointer">Create</a></li>`;
      });

      matches.innerHTML = html;
    }
  })

  //Check whether server has accepted your connection request or not ! if yes then function will execute
  socket.on("join", function (data) {
    console.log(data.message);
  });

  // socket.emit("coinstatus", {
  //   id: id,
  //   coins: coins
  // })

  socket.on("coins", (data) => {
    coinCount.innerHTML = `<p>${data.coins}</p>`;
  })

  // Send credentials to server !
  socket.emit("join", {
    id: id,
    group_name: group_name,
    name: name,
    email: email
  });

  socket.on("adminstatus", (data) => {
    if (data.status) {
      buyButton.innerHTML = `<button>
                              <span>Purchase Coins <i class="fa fa-money" aria-hidden="true"></i></span>
                             </button>`;
    } else {
      console.log("Participant");
    }
  })


  socket.on("enter", function (data) {
    // Display on body
    // alert_message.innerHTML += `<h1>${data.message} <span>7.08PM</span></h1>`;
    console.log("Participant Added: ");
    console.log(data);

    alert(`${data.message}`);


    location.reload();
  });


  exitButton.addEventListener("click", () => {
    socket.emit("close", {
      id: id
    });

    location.href = "/";
  })

  window.onbeforeunload = function () {
    socket.emit("close", {
      id: id
    });
  };


  // Collect value from input box and send it to the websocket server
  // button.addEventListener("click", sendData);

  // Create function sendData
  function sendData() {
    console.log("Sent :", text_input.value);

    // Send this input value to server
    socket.emit("message", {
      message: text_input.value,
      name: name,
      id: id
    });

  };

  // Collect data sent by server !
  socket.on("server_message", function (data) {
    console.log("Recieved :", data.message);
  });

  // Typing...
  // text_input.addEventListener("input", typing);

  function typing() {
    console.log("Typing...");
    console.log(name);
    socket.emit("typing", {
      type: "Typing...",
      name: name,
      id: id
    });
  };

  socket.on("server_type_message", function (data) {
    console.log(data);
  });


  socket.on("leave", function (data) {
    console.log(data);
  });


  // Room Information !
  socket.on("room", function (data) {
    console.log("Room Data: ");
    console.log(data);

    // const { name } = data;

    //   let html = "";
    //     html += `<li>${element.name} <i class="fa fa-circle" aria-hidden="true"></i></li>`;

    //   document.querySelector("#list").innerHTML = html;
  });

  window.addEventListener("dblclick", () => {
    purchaseForm.classList.remove("active");
    chatcontainer.classList.remove("active");
  })


  // Buy Button logic
  buyButton.addEventListener("click", () => {
    purchaseForm.classList.add("active");
    chatcontainer.classList.add("active");
  })

  purchaseButton.addEventListener("click", () => {
    // let coins = Number(prompt("How many coins?"));

    let redirect_url = `http://localhost:3000/pay?number_coins=${coinsNumber.value}&title=${group_name}&id=${id}`;
    location.href = redirect_url;
  })
</script>

</html>